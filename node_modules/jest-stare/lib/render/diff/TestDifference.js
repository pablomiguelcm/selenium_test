"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const diff2html = require("diff2html");
const $ = require("jquery");
class TestDifference {
    static containsDiff(jestFailureMessage) {
        return jestFailureMessage.search(TestDifference.DIFF_INDICATOR) >= 0;
    }
    static generate(jestFailureMessage) {
        const jestDiff = TestDifference.isolateDiff(jestFailureMessage);
        const diffjson = diff2html.parse(jestDiff);
        const diffHtml = diff2html.html(diffjson, {
            drawFileList: false,
            outputFormat: "side-by-side",
            matching: "lines"
        });
        return $(diffHtml).get(0);
    }
    static isolateDiff(jestFailureMessage) {
        const beginIndex = jestFailureMessage.search(TestDifference.DIFF_INDICATOR);
        const endIndex = jestFailureMessage.search(TestDifference.DIFF_END_INDICATOR);
        let isolated = jestFailureMessage.substring(beginIndex, endIndex);
        let snapshotChanges = 0;
        let receivedChanges = 0;
        const changeLines = isolated.split(/\r?\n/g);
        for (const line of changeLines) {
            if (/^- /.test(line)) {
                snapshotChanges++;
            }
            else if (/^\+ /.test(line)) {
                receivedChanges++;
            }
        }
        const changesIndicator = `\n@@ -0,${snapshotChanges} +0,${receivedChanges} @@\n`;
        isolated = isolated.replace("- Snapshot", "--- Snapshot");
        isolated = isolated.replace("+ Received", "+++ Received");
        const lines = isolated.split(/\r?\n/g);
        lines.splice(2, 0, changesIndicator);
        return lines.join(`\n`);
    }
}
exports.TestDifference = TestDifference;
TestDifference.DIFF_INDICATOR = /- Snapshot\s*(\-\s*[0-9]+)?\n\s*\+ Received\s*(\+\s*[0-9]+)?/g;
TestDifference.DIFF_END_INDICATOR = /(at .*? \(.*?:[0-9]+:[0-9]+\)\s)/g;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdERpZmZlcmVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVuZGVyL2RpZmYvVGVzdERpZmZlcmVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBdUM7QUFDdkMsNEJBQTRCO0FBTzVCLE1BQWEsY0FBYztJQWdCaEIsTUFBTSxDQUFDLFlBQVksQ0FBQyxrQkFBMEI7UUFDakQsT0FBTyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBU00sTUFBTSxDQUFDLFFBQVEsQ0FBQyxrQkFBMEI7UUFDN0MsTUFBTSxRQUFRLEdBQUcsY0FBYyxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ2hFLE1BQU0sUUFBUSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0MsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FDM0IsUUFBUSxFQUNSO1lBQ0ksWUFBWSxFQUFFLEtBQUs7WUFDbkIsWUFBWSxFQUFFLGNBQWM7WUFDNUIsUUFBUSxFQUFFLE9BQU87U0FDcEIsQ0FDSixDQUFDO1FBRUYsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFXTyxNQUFNLENBQUMsV0FBVyxDQUFDLGtCQUEwQjtRQUNqRCxNQUFNLFVBQVUsR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzVFLE1BQU0sUUFBUSxHQUFHLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUM5RSxJQUFJLFFBQVEsR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRWxFLElBQUksZUFBZSxHQUFHLENBQUMsQ0FBQztRQUN4QixJQUFJLGVBQWUsR0FBRyxDQUFDLENBQUM7UUFDeEIsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QyxLQUFLLE1BQU0sSUFBSSxJQUFJLFdBQVcsRUFBRTtZQUM1QixJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ2xCLGVBQWUsRUFBRSxDQUFDO2FBQ3JCO2lCQUFNLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDMUIsZUFBZSxFQUFFLENBQUM7YUFDckI7U0FDSjtRQUNELE1BQU0sZ0JBQWdCLEdBQUcsV0FBVyxlQUFlLE9BQU8sZUFBZSxPQUFPLENBQUM7UUFDakYsUUFBUSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBRTFELFFBQVEsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxjQUFjLENBQUMsQ0FBQztRQUMxRCxNQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBRXJDLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDOztBQTFFTCx3Q0EyRUM7QUFyRWlCLDZCQUFjLEdBQVcsK0RBQStELENBQUM7QUFFekYsaUNBQWtCLEdBQVcsbUNBQW1DLENBQUMifQ==